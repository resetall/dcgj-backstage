/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.8.RC0
 * Generated at: 2016-11-29 09:12:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class brandnews_005fdesign_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!-- BEGIN PAGE HEADER-->\n");
      out.write("<div class=\"row\">\n");
      out.write("    <div class=\"col-md-12\">\n");
      out.write("        <!-- BEGIN PAGE TITLE & BREADCRUMB-->\n");
      out.write("        <h3 class=\"page-title\" id=\"index-page-title\">新闻管理</h3>\n");
      out.write("        <ul class=\"page-breadcrumb breadcrumb\">\n");
      out.write("            <li>\n");
      out.write("                <i class=\"fa fa-home\"></i>\n");
      out.write("                <a href=\"/backstage/index\">\n");
      out.write("                    首页\n");
      out.write("                </a>\n");
      out.write("                <i class=\"fa fa-angle-right\"></i>\n");
      out.write("            </li>\n");
      out.write("            <li>\n");
      out.write("                <a href=\"javascript:;\">\n");
      out.write("                    新闻管理\n");
      out.write("                </a>\n");
      out.write("            </li>\n");
      out.write("        </ul>\n");
      out.write("        <!-- END PAGE TITLE & BREADCRUMB-->\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<!-- END PAGE HEADER-->\n");
      out.write("<div class=\"row\">\n");
      out.write("    <div class=\"col-md-12 col-xs-12 col-sm-12\">\n");
      out.write("        <h3 class=\"page-header\" style=\"margin-top: 10px\">\n");
      out.write("            新闻管理\n");
      out.write("        </h3>\n");
      out.write("        <div id=\"toolbar\">\n");
      out.write("            <button id=\"remove\" class=\"btn btn-danger\" disabled>\n");
      out.write("                <i class=\"glyphicon glyphicon-remove\"></i> Delete\n");
      out.write("            </button>\n");
      out.write("        </div>\n");
      out.write("        <table id=\"newsTable\"\n");
      out.write("               data-toolbar=\"#toolbar\"\n");
      out.write("               data-search=\"true\"\n");
      out.write("               data-show-refresh=\"true\"\n");
      out.write("               data-show-toggle=\"true\"\n");
      out.write("               data-show-columns=\"true\"\n");
      out.write("               data-show-export=\"true\"\n");
      out.write("               data-detail-view=\"true\"\n");
      out.write("               data-detail-formatter=\"detailFormatter\"\n");
      out.write("               data-minimum-count-columns=\"2\"\n");
      out.write("               data-show-pagination-switch=\"true\"\n");
      out.write("               data-pagination=\"true\"\n");
      out.write("               data-id-field=\"id\"\n");
      out.write("               data-page-list=\"[10, 25, 50, 100, ALL]\"\n");
      out.write("               data-show-footer=\"false\"\n");
      out.write("               data-side-pagination=\"server\"\n");
      out.write("               data-url=\"/backstage/brandNews/getNewsList\"\n");
      out.write("               data-response-handler=\"responseHandler\">\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <button type=\"button\" class=\"btn btn-primary col-md-2\" style=\"margin-top: 10px\" data-toggle=\"modal\" data-target=\".bs-example-modal-lg\">添加新闻</button>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"modal fade bs-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n");
      out.write("        <div class=\"modal-dialog modal-wide\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\n");
      out.write("                    <h4 class=\"modal-title\" id=\"myLargeModalLabel\">添加新闻</h4>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-body\">\n");
      out.write("                    <div id=\"addNews\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"newsTitle\">新闻标题</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"newsTitle\" name=\"newsTitle\" placeholder=\"请输入新闻标题...\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"newsSummary\">新闻简介</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"newsSummary\" name=\"newsSummary\" placeholder=\"请输入新闻简介...\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"newsContent\">新闻内容</label>\n");
      out.write("                            <textarea class=\"form-control\" id=\"newsContent\" name=\"newsContent\" placeholder=\"请输入新闻正文...\" rows=\"10\"></textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"checkbox\">\n");
      out.write("                            <label>\n");
      out.write("                                <input type=\"checkbox\" name=\"isValued\" id=\"isValued\"> 是否有效\n");
      out.write("                            </label>\n");
      out.write("                        </div>\n");
      out.write("                        <button type=\"submit\" id=\"commitNews\" class=\"btn btn-primary\">确认提交</button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div><!-- /.modal-content -->\n");
      out.write("        </div><!-- /.modal-dialog -->\n");
      out.write("    </div><!-- /.modal -->\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    var $table = $('#newsTable'),\n");
      out.write("            $remove = $('#remove'),\n");
      out.write("            selections = [];\n");
      out.write("\n");
      out.write("    function initTable() {\n");
      out.write("        $table.bootstrapTable({\n");
      out.write("            height: getHeight(),\n");
      out.write("            columns: [\n");
      out.write("                [\n");
      out.write("                    {\n");
      out.write("                        field: 'state',\n");
      out.write("                        checkbox: true,\n");
      out.write("                        rowspan: 2,\n");
      out.write("                        align: 'center',\n");
      out.write("                        valign: 'middle'\n");
      out.write("                    },\n");
      out.write("                    {\n");
      out.write("                        title: '新闻id',\n");
      out.write("                        field: 'id',\n");
      out.write("                        rowspan: 2,\n");
      out.write("                        align: 'center',\n");
      out.write("                        valign: 'middle',\n");
      out.write("                        sortable: true,\n");
      out.write("                        footerFormatter: totalTextFormatter\n");
      out.write("                    },\n");
      out.write("                    {\n");
      out.write("                        title: '新闻详情',\n");
      out.write("                        colspan: 3,\n");
      out.write("                        align: 'center'\n");
      out.write("                    }\n");
      out.write("                ],\n");
      out.write("                [\n");
      out.write("                    {\n");
      out.write("                        field: 'newsTitle',\n");
      out.write("                        title: '新闻标题',\n");
      out.write("                        sortable: true,\n");
      out.write("                        editable: true,\n");
      out.write("                        footerFormatter: totalNameFormatter,\n");
      out.write("                        align: 'center'\n");
      out.write("                    },\n");
      out.write("                    {\n");
      out.write("                        field: 'publishDate',\n");
      out.write("                        title: '发布日期',\n");
      out.write("                        sortable: true,\n");
      out.write("                        align: 'center',\n");
      out.write("                        editable: {\n");
      out.write("                            type: 'text',\n");
      out.write("                            title: '修改日期',\n");
      out.write("                            validate: function (value) {\n");
      out.write("                                value = $.trim(value);\n");
      out.write("                                if (!value) {\n");
      out.write("                                    return 'This field is required';\n");
      out.write("                                }\n");
      out.write("                                if (!/^$/.test(value)) {\n");
      out.write("                                    return 'This field needs to start width $.'\n");
      out.write("                                }\n");
      out.write("                                var data = $table.bootstrapTable('getData'),\n");
      out.write("                                        index = $(this).parents('tr').data('index');\n");
      out.write("                                console.log(data[index]);\n");
      out.write("                                return '';\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        footerFormatter: totalPriceFormatter\n");
      out.write("                    }, {\n");
      out.write("                    field: 'operate',\n");
      out.write("                    title: '操作',\n");
      out.write("                    align: 'center',\n");
      out.write("                    events: operateEvents,\n");
      out.write("                    formatter: operateFormatter\n");
      out.write("                }\n");
      out.write("                ]\n");
      out.write("            ]\n");
      out.write("        });\n");
      out.write("        // sometimes footer render error.\n");
      out.write("        setTimeout(function () {\n");
      out.write("            $table.bootstrapTable('resetView');\n");
      out.write("        }, 200);\n");
      out.write("        $table.on('check.bs.table uncheck.bs.table ' +\n");
      out.write("                'check-all.bs.table uncheck-all.bs.table', function () {\n");
      out.write("            $remove.prop('disabled', !$table.bootstrapTable('getSelections').length);\n");
      out.write("            // save your data, here just save the current page\n");
      out.write("            selections = getIdSelections();\n");
      out.write("            // push or splice the selections if you want to save all data selections\n");
      out.write("        });\n");
      out.write("        $table.on('expand-row.bs.table', function (e, index, row, $detail) {\n");
      out.write("            if (index % 2 == 1) {\n");
      out.write("                $detail.html('Loading from ajax request...');\n");
      out.write("                $.get('LICENSE', function (res) {\n");
      out.write("                    $detail.html(res.replace(/\\n/g, '<br>'));\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        $table.on('all.bs.table', function (e, name, args) {\n");
      out.write("            console.log(name, args);\n");
      out.write("        });\n");
      out.write("        $remove.click(function () {\n");
      out.write("            var ids = getIdSelections();\n");
      out.write("            $table.bootstrapTable('remove', {\n");
      out.write("                field: 'id',\n");
      out.write("                values: ids\n");
      out.write("            });\n");
      out.write("            $remove.prop('disabled', true);\n");
      out.write("        });\n");
      out.write("        $(window).resize(function () {\n");
      out.write("            $table.bootstrapTable('resetView', {\n");
      out.write("                height: getHeight()\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    function getIdSelections() {\n");
      out.write("        return $.map($table.bootstrapTable('getSelections'), function (row) {\n");
      out.write("            return row.id\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    function responseHandler(res) {\n");
      out.write("        $.each(res.rows, function (i, row) {\n");
      out.write("            row.state = $.inArray(row.id, selections) !== -1;\n");
      out.write("        });\n");
      out.write("        return res;\n");
      out.write("    }\n");
      out.write("    function detailFormatter(index, row) {\n");
      out.write("        var html = [];\n");
      out.write("        $.each(row, function (key, value) {\n");
      out.write("            html.push('<p><b>' + key + ':</b> ' + value + '</p>');\n");
      out.write("        });\n");
      out.write("        return html.join('');\n");
      out.write("    }\n");
      out.write("    function operateFormatter(value, row, index) {\n");
      out.write("        return [\n");
      out.write("            '<a class=\"like\" href=\"javascript:void(0)\" title=\"Like\">',\n");
      out.write("            '<i class=\"glyphicon glyphicon-heart\"></i>',\n");
      out.write("            '</a>  ',\n");
      out.write("            '<a class=\"remove\" href=\"javascript:void(0)\" title=\"Remove\">',\n");
      out.write("            '<i class=\"glyphicon glyphicon-remove\"></i>',\n");
      out.write("            '</a>'\n");
      out.write("        ].join('');\n");
      out.write("    }\n");
      out.write("    window.operateEvents = {\n");
      out.write("        'click .like': function (e, value, row, index) {\n");
      out.write("            alert('You click like action, row: ' + JSON.stringify(row));\n");
      out.write("        },\n");
      out.write("        'click .remove': function (e, value, row, index) {\n");
      out.write("            $table.bootstrapTable('remove', {\n");
      out.write("                field: 'id',\n");
      out.write("                values: [row.id]\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    };\n");
      out.write("    function totalTextFormatter(data) {\n");
      out.write("        return 'Total';\n");
      out.write("    }\n");
      out.write("    function totalNameFormatter(data) {\n");
      out.write("        return data.length;\n");
      out.write("    }\n");
      out.write("    function totalPriceFormatter(data) {\n");
      out.write("        var total = 0;\n");
      out.write("        $.each(data, function (i, row) {\n");
      out.write("            total += +(row.price.substring(1));\n");
      out.write("        });\n");
      out.write("        return '$' + total;\n");
      out.write("    }\n");
      out.write("    function getHeight() {\n");
      out.write("        return $(window).height() - $('h1').outerHeight(true);\n");
      out.write("    }\n");
      out.write("    $(function(){\n");
      out.write("\n");
      out.write("        var scripts = [\n");
      out.write("                    location.search.substring(1) || 'assets/plugins/bootstrap-table/src/bootstrap-table.js',\n");
      out.write("                    'assets/plugins/bootstrap-table/src/extensions/export/bootstrap-table-export.js',\n");
      out.write("                    'http://rawgit.com/hhurz/tableExport.jquery.plugin/master/tableExport.js',\n");
      out.write("                    'assets/plugins/bootstrap-table/src/extensions/editable/bootstrap-table-editable.js',\n");
      out.write("                    'http://rawgit.com/vitalets/x-editable/master/dist/bootstrap3-editable/js/bootstrap-editable.js'\n");
      out.write("                ],\n");
      out.write("                eachSeries = function (arr, iterator, callback) {\n");
      out.write("                    callback = callback || function () {};\n");
      out.write("                    if (!arr.length) {\n");
      out.write("                        return callback();\n");
      out.write("                    }\n");
      out.write("                    var completed = 0;\n");
      out.write("                    var iterate = function () {\n");
      out.write("                        iterator(arr[completed], function (err) {\n");
      out.write("                            if (err) {\n");
      out.write("                                callback(err);\n");
      out.write("                                callback = function () {};\n");
      out.write("                            }\n");
      out.write("                            else {\n");
      out.write("                                completed += 1;\n");
      out.write("                                if (completed >= arr.length) {\n");
      out.write("                                    callback(null);\n");
      out.write("                                }\n");
      out.write("                                else {\n");
      out.write("                                    iterate();\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                        });\n");
      out.write("                    };\n");
      out.write("                    iterate();\n");
      out.write("                };\n");
      out.write("        eachSeries(scripts, getScript, initTable);\n");
      out.write("\n");
      out.write("        function getScript(url, callback) {\n");
      out.write("            var head = document.getElementsByTagName('head')[0];\n");
      out.write("            var script = document.createElement('script');\n");
      out.write("            script.src = url;\n");
      out.write("            var done = false;\n");
      out.write("            // Attach handlers for all browsers\n");
      out.write("            script.onload = script.onreadystatechange = function() {\n");
      out.write("                if (!done && (!this.readyState ||\n");
      out.write("                        this.readyState == 'loaded' || this.readyState == 'complete')) {\n");
      out.write("                    done = true;\n");
      out.write("                    if (callback)\n");
      out.write("                        callback();\n");
      out.write("                    // Handle memory leak in IE\n");
      out.write("                    script.onload = script.onreadystatechange = null;\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            head.appendChild(script);\n");
      out.write("            // We handle everything using the script element injection\n");
      out.write("            return undefined;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("        $('.modal').on('hidden.bs.modal', function (e) {\n");
      out.write("            $(\"#addNews\").find(\"input,textarea\").each(function(){\n");
      out.write("                this.value = \"\";\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $(\"#commitNews\").click(function(){\n");
      out.write("            var isValued = 0;\n");
      out.write("            if($(\"#isValued\")[0].checked == 'true'){\n");
      out.write("                isValued = 1;\n");
      out.write("            }\n");
      out.write("            var jsonStr = {\n");
      out.write("                \"newsTitle\" : $(\"#newsTitle\").val(),\n");
      out.write("                \"newsSummary\" : $(\"#newsSummary\").val(),\n");
      out.write("                \"newsContent\" : $(\"#newsContent\").val(),\n");
      out.write("                \"isvalid\" : isValued\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            $.ajax({\n");
      out.write("                url:\"/backstage/brandNews/addNews\",\n");
      out.write("                type:\"post\",\n");
      out.write("                dataType: \"json\",\n");
      out.write("                contentType: \"application/json;charset=UTF-8\",\n");
      out.write("                data:JSON.stringify(jsonStr),\n");
      out.write("                success:function(data){\n");
      out.write("                    alert(\"success\" + JSON.stringify(data));\n");
      out.write("\n");
      out.write("                },\n");
      out.write("                error:function(data){\n");
      out.write("                    alert(\"error\" + JSON.stringify(data));\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $('.modal').modal('hide');\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
